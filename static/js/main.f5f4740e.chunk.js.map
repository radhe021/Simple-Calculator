{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/calculator/index.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Calculator","useState","operationCount","setOperationCount","operationSign","setOperationSign","operaionResult","setoperaionResult","visible","setvisible","input1","document","getElementById","value","input2","useEffect","Number","toString","performOperation","sign","className","type","autoComplete","placeholder","name","onClick","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.f5f4740e.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t20,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 15;\nmodule.exports = webpackAsyncContext;","import React ,{useState,useEffect} from 'react'\nimport \"./index.css\";\n\nexport default function Calculator() {\n  var [operationCount, setOperationCount] = useState(0);\n  var [operationSign, setOperationSign] = useState('');\n  var [operaionResult, setoperaionResult] = useState('');\n  var [visible, setvisible] = useState(false);\n\n  var input1= document.getElementById('input1')?.value;\n  var input2 = document.getElementById('input2')?.value;\n\n  useEffect(()=>{\n  switch (operationSign) {\n    case '+':\n      setoperaionResult((Number(input1) + Number(input2)).toString())\n      break;\n    case '-':\n      setoperaionResult((input1-input2).toString())\n      break;\n    case '*':\n      setoperaionResult((input1*input2).toString())\n      break;\n    case '/':\n      setoperaionResult(input2 !=0 ?(input1/input2):0)\n      break;\n    default:\n      setvisible(false)\n      break;\n  }  \n  \n},[operationSign,input1,input2])\n\n  const performOperation=(sign)=>\n  {\n    setOperationCount(operationCount+1);\n    setOperationSign(sign);\n    setvisible(true);\n  }\n  const resetAll =()=>{\n    setOperationCount(0);\n    setvisible(false);\n    document.getElementById('input1').value='';\n    document.getElementById('input2').value='';\n   \n  }\n \n\n  return (\n    <div className=\"layout-column align-items-center\">\n      <div data-testid=\"total-operations\" className=\"pt-50 total-operations\">Operation count is : {operationCount}</div>\n      <div className=\"card\">\n\n        <section className=\"card-text\">\n          <div className=\"layout-row justify-content-around align-items-center mt-40\">\n            <input id=\"input1\" type=\"number\" className=\"ml-3 mr-3\" data-testid=\"app-input1\" autoComplete=\"off\" placeholder=\"Eg: 1\"\n                name=\"input1\"/>\n            <label className=\"ml-2 mr-2 symbol text-center\" data-testid=\"selected-operator\">{operationSign}</label>\n            <input id=\"input2\" type=\"number\" data-testid=\"app-input2\" autoComplete=\"off\" className=\"ml-3 mr-3\"\n               placeholder=\"Eg: 2\"/>\n          </div>\n          <div className=\"layout-row justify-content-around mt-30\">\n            <button onClick={() =>(performOperation('+'))} className=\"operationFont\" type=\"submit\" data-testid=\"addButton\">+</button>\n            <button onClick={() =>(performOperation('-'))} className=\"operationFont\" type=\"submit\" data-testid=\"subtractButton\">-</button>\n            <button onClick={() =>(performOperation('*'))} className=\"operationFont\" type=\"submit\" data-testid=\"multiplyButton\">*</button>\n            <button onClick={() =>(performOperation('/'))} className=\"operationFont\" type=\"submit\" data-testid=\"divideButton\">/</button>\n          </div>\n\n          <div className=\"layout-row justify-content-between align-items-center mt-30\">\n            <button onClick={resetAll} type=\"reset\" data-testid=\"resetButton\" className=\"outline danger\">Reset</button>\n            <div className=\"layout-row justify-content-center align-items-center result-container\">\n              <div data-testid=\"result\" className=\"result-value ma-0 slide-up-fade-in\"> {visible && operaionResult}</div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n\n}","import React  from 'react';\nimport './App.css';\nimport 'h8k-components';\nimport Calculator from '././components/calculator/index.js';\n\nconst title = \"Simple Calculator App\";\n\nfunction App() {\n  return (\n    <div>\n      <h8k-navbar header={title} />\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport {applyPolyfills, defineCustomElements} from 'h8k-components/loader';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\napplyPolyfills().then(() => {\n     defineCustomElements(window);\n});\n"],"sourceRoot":""}